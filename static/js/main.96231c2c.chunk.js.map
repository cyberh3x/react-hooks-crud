{"version":3,"sources":["config/actions-type.js","config/constant.js","utility/lorem-ipsum-utility.js","utility/number-utility.js","store/posts/post-reducer.js","store/posts/post-state.js","store/posts/post-provider.js","services/http.js","hooks/posts/index.js","config/routes.js","components/button/index.jsx","components/card/index.jsx","components/switch/index.jsx","components/progress/linear.jsx","app/components/posts/index.jsx","app/index.jsx","config/theme.js","App.js","reportWebVitals.js","index.js"],"names":["STORE_POSTS","REMOVE_POST","UPDATE_POST","CREATE_POST","LOREM_IPSUM","generate","count","prefix","suffix","separator","concat","repeat","generateRandomNumber","min","max","Math","random","PostReducer","state","action","type","posts","payload","filter","item","id","post","updateSuffix","title","undefined","body","createSuffix","unshift","userId","PostState","PostContext","React","createContext","PostProvider","children","contextValue","useReducer","Provider","value","createRequest","method","url","options","withDefaultBaseUrl","a","defaultOptions","headers","Accept","fetch","then","response","json","_GET","usePosts","useContext","dispatch","read","reverse","catch","erorr","console","error","remove","postId","update","create","Button","color","variant","props","Card","media","adminMode","handleRemove","handleUpdate","CardHeader","avatar","Avatar","sx","bgcolor","red","subheader","CardMedia","component","height","image","alt","CardContent","Typography","CardActions","onClick","SwitchLabels","label","handleChange","FormGroup","FormControlLabel","control","Switch","checked","onChange","inputProps","LinearProgress","width","useStyles","makeStyles","theme","container","background","padding","spacing","backdropFilter","cards","margin","maxWidth","switch","float","shape","overflow","lineHeight","fill","palette","primary","main","progress","position","top","Posts","classes","useState","setAdminMode","useEffect","Grid","xs","className","xmlns","viewBox","preserveAspectRatio","d","length","Container","target","map","Box","my","justifyContent","AppRoot","path","element","createTheme","secondary","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96231c2c.chunk.js","sourcesContent":["export const STORE_POSTS = \"store_posts\";\r\nexport const REMOVE_POST = \"store_post\";\r\nexport const UPDATE_POST = \"update_post\";\r\nexport const CREATE_POST = \"create_post\";\r\n","export const LOREM_IPSUM = \"Lorem ipsum\";\r\n","import { LOREM_IPSUM } from \"config/constant\";\r\n\r\nexport const generate = (\r\n  count = 2,\r\n  prefix = \"\",\r\n  suffix = \"\",\r\n  separator = \" \"\r\n) => {\r\n  return `${prefix}${separator}${LOREM_IPSUM.concat(\" \").repeat(\r\n    count\r\n  )}${separator}${suffix}`;\r\n};\r\n","export function generateRandomNumber(min = 0, max = 1000) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\n","import {\r\n  CREATE_POST,\r\n  REMOVE_POST,\r\n  STORE_POSTS,\r\n  UPDATE_POST,\r\n} from \"config/actions-type\";\r\nimport { generate } from \"utility/lorem-ipsum-utility\";\r\nimport { generateRandomNumber } from \"utility/number-utility\";\r\n\r\nconst PostReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case STORE_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n      };\r\n    case REMOVE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((item) => item.id !== action.payload),\r\n      };\r\n    case UPDATE_POST:\r\n      const post = state.posts.filter((item) => {\r\n        return item.id === action.payload;\r\n      });\r\n      const updateSuffix = \"Updated!\";\r\n      post[0].title = generate(undefined, \"\", updateSuffix);\r\n      post[0].body = generate(5, \"\", updateSuffix);\r\n      return {\r\n        ...state,\r\n      };\r\n    case CREATE_POST:\r\n      const createSuffix = \"Created!\";\r\n      state.posts.unshift({\r\n        id: generateRandomNumber(101),\r\n        userId: generateRandomNumber(),\r\n        title: generate(undefined, \"\", createSuffix),\r\n        body: generate(10, \"\", createSuffix),\r\n      });\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default PostReducer;\r\n","const PostState = {\r\n  posts: []\r\n};\r\n\r\nexport default PostState;\r\n","import React, { useContext, useReducer } from \"react\";\r\nimport PostReducer from \"store/posts/post-reducer\";\r\nimport PostState from \"store/posts/post-state\";\r\n\r\nconst PostContext = React.createContext();\r\n\r\nconst PostProvider = ({ children }) => {\r\n  const contextValue = useReducer(PostReducer, PostState);\r\n  return (\r\n    <PostContext.Provider value={contextValue}>{children}</PostContext.Provider>\r\n  );\r\n};\r\nexport default PostProvider;\r\n\r\nexport const usePosts = () => {\r\n  const contextValue = useContext(PostContext);\r\n  return contextValue;\r\n};\r\n","const baseUrl = \"https://jsonplaceholder.typicode.com\";\r\n\r\nconst createRequest = async (method, url, options, withDefaultBaseUrl) => {\r\n  const defaultOptions = {\r\n    method,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n    ...options,\r\n  };\r\n  return await fetch(\r\n    `${withDefaultBaseUrl ? baseUrl : \"\"}${url}`,\r\n    defaultOptions\r\n  ).then((response) => {\r\n    return response.json();\r\n  });\r\n};\r\n\r\nexport const _GET = (url, options = {}, withDefaultBaseUrl = true) => {\r\n  return createRequest(\"GET\", url, options, withDefaultBaseUrl);\r\n};\r\n","import { usePosts as usePostsContext } from \"store/posts/post-provider\";\r\nimport { _GET } from \"services/http\";\r\nimport { GET_POSTS } from \"config/routes\";\r\nimport {\r\n  CREATE_POST,\r\n  REMOVE_POST,\r\n  STORE_POSTS,\r\n  UPDATE_POST,\r\n} from \"config/actions-type\";\r\n\r\nconst usePosts = () => {\r\n  const [{ posts }, dispatch] = usePostsContext(),\r\n    read = async () => {\r\n      return await _GET(GET_POSTS)\r\n        .then((response) => {\r\n          dispatch({ type: STORE_POSTS, payload: response.reverse() });\r\n        })\r\n        .catch((erorr) => console.error(erorr));\r\n    },\r\n    remove = (postId) => {\r\n      dispatch({ type: REMOVE_POST, payload: postId });\r\n    },\r\n    update = (postId) => {\r\n      dispatch({ type: UPDATE_POST, payload: postId });\r\n    },\r\n    create = () => {\r\n      dispatch({ type: CREATE_POST });\r\n    };\r\n\r\n  return {\r\n    read,\r\n    remove,\r\n    update,\r\n    create,\r\n    posts,\r\n  };\r\n};\r\n\r\nexport default usePosts;\r\n","export const GET_POSTS = \"/posts\";\r\nexport const HOME = \"/\";\r\n","import ButtonComponent from \"@mui/material/Button\";\r\n\r\nconst Button = ({ color = \"primary\", variant = \"contained\", ...props }) => {\r\n  return (\r\n    <ButtonComponent color={color} variant={variant} {...props}>\r\n      {props.children}\r\n    </ButtonComponent>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import CardComponent from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"components/button\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport { red } from \"@mui/material/colors\";\r\n\r\nexport default function Card({\r\n  id = null,\r\n  title = \"\",\r\n  media,\r\n  body = \"\",\r\n  adminMode = false,\r\n  handleRemove = () => {},\r\n  handleUpdate = () => {},\r\n  ...props\r\n}) {\r\n  return (\r\n    <CardComponent {...props}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n            R\r\n          </Avatar>\r\n        }\r\n        title={title}\r\n        subheader=\"September 14, 2016\"\r\n      />\r\n      <CardMedia\r\n        component=\"img\"\r\n        height=\"194\"\r\n        image=\"https://via.placeholder.com/600/92c952\"\r\n        alt=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {body}\r\n        </Typography>\r\n      </CardContent>\r\n      {adminMode && (\r\n        <CardActions>\r\n          <Button\r\n            color=\"error\"\r\n            variant=\"contained\"\r\n            onClick={() => handleRemove(id)}\r\n          >\r\n            Remove\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            onClick={() => handleUpdate(id)}\r\n          >\r\n            Update\r\n          </Button>\r\n        </CardActions>\r\n      )}\r\n    </CardComponent>\r\n  );\r\n}\r\n","import FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Switch from \"@mui/material/Switch\";\r\n\r\nexport default function SwitchLabels({\r\n  label = \"\",\r\n  value = false,\r\n  handleChange = () => {},\r\n  ...props\r\n}) {\r\n  return (\r\n    <FormGroup {...props}>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={value}\r\n            onChange={handleChange}\r\n            inputProps={{ \"aria-label\": \"controlled\" }}\r\n          />\r\n        }\r\n        label={label}\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\n","import Box from \"@mui/material/Box\";\r\nimport LinearProgressComponent from \"@mui/material/LinearProgress\";\r\n\r\nexport default function LinearProgress(props) {\r\n  return (\r\n    <Box sx={{ width: \"100%\" }} {...props}>\r\n      <LinearProgressComponent />\r\n    </Box>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport usePosts from \"hooks/posts\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/system/Box\";\r\nimport Card from \"components/card\";\r\nimport Switch from \"components/switch\";\r\nimport LinearProgress from \"components/progress/linear\";\r\nimport Button from \"components/button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    background: \"rgba(255,255,255,0.5)\",\r\n    padding: theme.spacing(5),\r\n    backdropFilter: \"blur(7px)\",\r\n  },\r\n  cards: {\r\n    margin: theme.spacing(0, \"auto\"),\r\n    maxWidth: \"100%\",\r\n  },\r\n  switch: {\r\n    float: \"right\",\r\n  },\r\n  shape: {\r\n    width: \"100%\",\r\n    overflow: \"hidden\",\r\n    lineHeight: 0,\r\n    \"& svg\": {\r\n      fill: theme.palette.primary.main,\r\n    },\r\n  },\r\n  progress: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n  },\r\n}));\r\n\r\nconst Posts = () => {\r\n  const classes = useStyles(),\r\n    [adminMode, setAdminMode] = useState(false),\r\n    { read, remove, update, create, posts } = usePosts(),\r\n    handleChangeMode = ({ target }) => {\r\n      setAdminMode(target.checked);\r\n    };\r\n\r\n  useEffect(() => {\r\n    read();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <div className={classes.shape}>\r\n        <svg\r\n          data-name=\"Layer 1\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 1200 120\"\r\n          preserveAspectRatio=\"none\"\r\n        >\r\n          <path d=\"M321.39,56.44c58-10.79,114.16-30.13,172-41.86,82.39-16.72,168.19-17.73,250.45-.39C823.78,31,906.67,72,985.66,92.83c70.05,18.48,146.53,26.09,214.34,3V0H0V27.35A600.21,600.21,0,0,0,321.39,56.44Z\"></path>\r\n        </svg>\r\n      </div>\r\n      {posts.length ? (\r\n        <Container maxWidth=\"md\" className={classes.container}>\r\n          <Grid container>\r\n            {adminMode && (\r\n              <Grid item xs={6}>\r\n                <Button onClick={create}>Add</Button>\r\n              </Grid>\r\n            )}\r\n            <Grid item xs={6}>\r\n              <Switch\r\n                value={adminMode}\r\n                label=\"Admin mode\"\r\n                handleChange={handleChangeMode}\r\n                className={adminMode ? classes.switch : \"\"}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {posts.map(({ id, title, body }) => {\r\n            return (\r\n              <Box my={5} key={id}>\r\n                <Grid item xs={12} justifyContent=\"center\">\r\n                  <Card\r\n                    id={id}\r\n                    title={title}\r\n                    body={body}\r\n                    className={classes.cards}\r\n                    adminMode={adminMode}\r\n                    handleRemove={remove}\r\n                    handleUpdate={update}\r\n                  />\r\n                </Grid>\r\n              </Box>\r\n            );\r\n          })}\r\n        </Container>\r\n      ) : (\r\n        <LinearProgress className={classes.progress} />\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import { Route, Routes } from \"react-router\";\r\nimport { HOME } from \"config/routes\";\r\nimport Posts from \"./components/posts\";\r\n\r\nconst AppRoot = () => {\r\n  return (\r\n    <main>\r\n      <Routes>\r\n        <Route path={HOME} element={<Posts />} />\r\n      </Routes>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default AppRoot;\r\n","import { createTheme } from \"@mui/material/styles\";\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#6E3CBC\",\r\n    },\r\n    secondary: {\r\n      main: \"#7267CB\",\r\n    },\r\n  },\r\n});\r\n","import PostProvider from \"./store/posts/post-provider\";\nimport AppRoot from \"app/index\";\nimport \"./App.css\";\nimport { ThemeProvider } from \"@mui/system\";\nimport { theme } from \"config/theme\";\n\nfunction App() {\n  return (\n    <PostProvider>\n      <ThemeProvider theme={theme}>\n        <AppRoot />\n      </ThemeProvider>\n    </PostProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}